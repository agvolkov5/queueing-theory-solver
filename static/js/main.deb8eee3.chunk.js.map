{"version":3,"sources":["App.js","serviceWorker.js","index.js","img/5-1.png"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getCurrentSMOKind","m_radio","state","n","n_value","m","m_value","t","t_value","code","toString","smo","smo_kinds","setState","console","log","t_input_visible","n_handler","event","target","value","m_handler","t_handler","queueLengthLimitOn","numberOfResponseSources","0sr","title","0mr","0sl","0si","0ml","0mi","0mll","1","lambda_value","mu_value","t_visible_className","react_default","a","createElement","className","type","placeholder","onChange","id","name","checked","htmlFor","src","formula_5_1","height","alt","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.deb8eee3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport formula_5_1 from './img/5-1.png';\n\nclass App extends Component {\n  constructor(props) {\n      super(props);\n\n      this.smo_kinds = {\n          '0sr': {\n              title: 'Одноканальная СМО с отказами',\n              t_input_visible: false,\n          },\n          '0mr': {\n              title: 'Многоканальная СМО с отказами',\n              t_input_visible: false,\n          },\n          '0sl': {\n              title: 'Одноканальная СМО с ограниченной длиной очереди',\n              t_input_visible: false,\n          },\n          '0si': {\n              title: 'Одноканальная СМО с неограниченной очередью',\n              t_input_visible: false,\n          },\n          '0ml': {\n              title: 'Многоканальная СМО с ограниченной очередью',\n              t_input_visible: true,\n          },\n          '0mi': {\n              title: 'Многоканальная СМО с неограниченной очередью',\n              t_input_visible: false,\n          },\n          '0mll': {\n              title: 'Многоканальная СМО с ограниченной длиной очереди и ограниченным временем ожидания в очереди',\n              t_input_visible: true,\n          },\n          '1': {\n              title: 'n-канальная СМО замкнутого типа с m источниками заявок',\n              t_input_visible: false,\n          }\n      };\n\n      this.state = {\n          lambda_value: '',\n          mu_value: '',\n          n_value: '',\n          m_value: '',\n          t_value: '',\n          m_radio: 'queue length limit',\n          smo: this.smo_kinds['0si'],\n      };\n  }\n  getCurrentSMOKind = () => {\n      const m_radio = this.state.m_radio;\n      const n = this.state.n_value;\n      const m = this.state.m_value;\n      const t = this.state.t_value;\n\n      let code = 1 - (m_radio.toString() === 'queue length limit');\n      if (code === 0) {\n          if (n === '1' || n === '') {\n              code += 's'\n          } else {\n              code += 'm'\n          }\n\n          if (m === '0') {\n              code += 'r'\n          } else if (m === '∞' || m === '') {\n              code += 'i'\n          } else {\n              code += 'l'\n          }\n\n          if (code === '0ml' && t !== '∞' && t !== '') {\n              code += 'l'\n          }\n      }\n\n      const smo = this.smo_kinds[code];\n      this.setState({smo: smo}, () => {\n          console.log(this.state.smo.t_input_visible !== true);\n      });\n  };\n\n  n_handler = event => {\n    this.setState({n_value: event.target.value}, () => {\n        this.getCurrentSMOKind();\n    });\n  };\n  m_handler = event => {\n    this.setState({m_value: event.target.value}, () => {\n        this.getCurrentSMOKind();\n    });\n  };\n  t_handler = event => {\n    this.setState({t_value: event.target.value}, () => {\n        this.getCurrentSMOKind();\n    });\n  };\n  queueLengthLimitOn = () => {\n    this.setState({m_radio: 'queue length limit'}, () => {\n        this.getCurrentSMOKind();\n    });\n  };\n  numberOfResponseSources = () => {\n    this.setState({m_radio: 'number of response sources'}, () => {\n        this.getCurrentSMOKind();\n    });\n  };\n\n  render() {\n    const t_visible_className = this.state.smo.t_input_visible === true ? 'option-item' : 'option-item hide';\n    console.log(t_visible_className);\n    return (\n        <div className=\"grid-container\">\n          <div className=\"apps-title\">Queueing Theory Solver</div>\n          <div className=\"tasks-kinds-wrapper\">\n            <div>Уравнения Колмогорова</div>\n            <div>СМО</div>\n          </div>\n          <div className=\"options-container\">\n              <div className=\"option-item\">\n                  <div className=\"option-name\">λ</div>\n                  <div className=\"equal-symbol\">=</div>\n                  <input type=\"text\"\n                        placeholder=\"lambda\"\n                        value=\"0\"\n                        onChange={this.n_handler}\n                  />\n              </div>\n              <div className=\"option-item\">\n                  <div className=\"option-name\">μ</div>\n                  <div className=\"equal-symbol\">=</div>\n                  <input type=\"text\"\n                         placeholder=\"mu\"\n                         value=\"0\"\n                         onChange={this.n_handler}\n                  />\n              </div>\n              <div className=\"flex-br\"/>\n              <div className=\"option-item\">\n                  <div className=\"option-name\">n</div>\n                  <div className=\"equal-symbol\">=</div>\n                  <input type=\"text\"\n                         placeholder=\"1\"\n                         value={this.state.n_value}\n                         onChange={this.n_handler}\n                  />\n              </div>\n              <div className=\"option-item\">\n                  <div className=\"option-name\">m</div>\n                  <div className=\"equal-symbol\">=</div>\n                  <input type=\"text\"\n                         placeholder=\"∞\"\n                         value={this.state.m_value}\n                         onChange={this.m_handler}\n                  />\n              </div>\n              <div className=\"m-radio\">\n                  <div className=\"radio-title\">m это:</div>\n                  <div>\n                      <input type=\"radio\"\n                             id=\"constraint-for-queue-length-radio\"\n                             name=\"m-definition\"\n                             onChange={this.queueLengthLimitOn}\n                             checked={this.state.m_radio === 'queue length limit'}\n                      />\n                      <label htmlFor=\"constraint-for-queue-length-radio\">ограничение длины очереди</label>\n                  </div>\n                  <div>\n                      <input type=\"radio\"\n                             id=\"count-of-responses-radio\"\n                             name=\"m-definition\"\n                             onChange={this.numberOfResponseSources}\n                             checked={this.state.m_radio === 'number of response sources'}\n                      />\n                      <label htmlFor=\"count-of-responses-radio\">число источников заявок</label>\n                  </div>\n              </div>\n              <div className={t_visible_className}>\n                  <div className=\"option-name\">\n                      t<sub>ож</sub>\n                  </div>\n                  <div className=\"equal-symbol\">=</div>\n                  <input type=\"text\"\n                         placeholder=\"∞\"\n                         value={this.state.t_value}\n                         onChange={this.t_handler}\n                  />\n              </div>\n          </div>\n          <div className=\"results-container\">\n              <h1>{this.state.smo.title}</h1>\n              <img src={formula_5_1} height=\"70pt\" alt=\"formula 5.1\"/>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/5-1.ba653199.png\";"],"sourceRoot":""}